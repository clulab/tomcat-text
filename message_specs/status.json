{
  "definitions": {},
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://asist.aptima.com/schemas/status.json",
  "type": "object",
  "title": "The ASIST status message Schema",
  "version": "0.2",
  "required": [
    "header",
    "msg"
  ],
  "properties": {
    "header": {
        "$ref": "../Common_Header/common_header.json",
        "properties": {         
          "message_type": {
            "$id": "#/properties/message_type",
            "type": "string",
            "title": "The Message_type Schema",
            "const": "status"
          }
        }
    },
    "msg": {
      "$id": "#/properties/msg",
      "type": "object",
      "title": "The Control Message Schema",
      "required": [
        "sub_type",
        "source",
        "timestamp",
        "version"
      ],
      "properties": {
        "sub_type": {
          "$id": "#/properties/msg/properties/sub_type",
          "type": "string",
          "title": "The sub type Schema",
          "example": ["heartbeat"],
          "const": "heartbeat"
        },
        "source": {
          "$id": "#/properties/msg/properties/source",
          "type": "string",
          "title": "The srouce Schema",
          "example": ["malmo", "reference_agent"],
          "pattern": "^(.*)$"
        },
          "timestamp": {
           "$id": "#/properties/timestamp",
           "type": "string",
           "title": "The Timestamp Schema",
           "default": "",
           "examples": [ "2019-12-26T14:05:02.3412Z" ],
           "pattern": "[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}[.]?[0-9]{0,}?Z"
        },
          "version": {
           "$id": "#/properties/version",
           "type": "string",
           "title": "The Version Schema",
           "default": "",
           "examples": [ "1.0", "2.1.3" ],
	   "$comment": "the pattern has a safety valve right now because we do not have a common version format.  When we do we should take out the first match clause.  The main part of the match shoud handle full semantic versioning identifiers",
           "pattern": "^([.]*)|(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$"
        },
         "experiment_id": {
           "$id": "#/properties/experiment_id",
           "type": ["string","null"],
           "title": "The Experiment Id Schema",
           "default": "",
           "examples": [ "123e4567-e89b-12d3-a456-426655440000" ],
           "pattern": "(null)|(Null)|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|^$)"
        },
         "trial_id": {
           "$id": "#/properties/trial_id",
           "type": ["string","null"],
           "title": "The Trial Id Schema",
           "default": "",
           "examples": [ "123e4567-e89b-12d3-a456-426655440000" ],
           "pattern": "(null)|(Null)|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|^$)"
        },
         "replay_parent_type": {
           "$id": "#/properties/replay_parent_type",
           "type": ["string","null"],
           "title": "The Replay Parent Type Schema",
           "enum": ["TRIAL", "REPLAY", null, "Null", "null"]
        },
         "replay_parent_id": {
           "$id": "#/properties/replay_parent_id",
           "type": ["string", "null"],
           "title": "The Replay Parent Id Schema",
           "default": "",
           "examples": [ "123e4567-e89b-12d3-a456-426655440000" ],
           "pattern": "(null)|(Null)|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|^$)"
        },
         "replay_id": {
         "$id": "#/properties/replay_id",
         "type": ["string", "null"],
         "title": "The Replay Id Schema",
         "default": "",
         "examples": [ "123e4567-e89b-12d3-a456-426655440000" ],
         "pattern": "(null)|(Null)|([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}|^$)"
       }
  }
  },
 "data": {
      "$id": "#/properties/data",
      "type": "object",
      "title": "The status heartbeat Data Schema",
      "required": [
        "state"],
      "properties": {
        "state": {
          "$id": "#/properties/msg/properties/state",
          "type": "string",
          "title": "The State Schema",
          "default": "ok",
          "enum": [ "ok", "info", "warn", "error", "fail" ],
          "examples": [
            "ok"
          ],
          "pattern": "^(.*)$"
        },

        "status": {
          "$id": "#/properties/msg/properties/status",
          "type": "string",
          "title": "The status message Schema",
          "default": "",
          "examples": [
            "Agent to too far behind in processing input messages."
          ],
          "pattern": "^(.*)$"
        },
        "active": {
          "$id": "#/properties/msg/properties/active",
          "type": "boolean",
          "title": "The active Schema",
          "examples": [
            true, false
          ],
          "pattern": "^(?i)(true|false)$"
        }
      }
    }
  }
}
