#!/bin/bash

# Author: Joseph Astier
#
# This file requires four input parameters
#
# name of test
# metadata file to publish on the Message Bus
# Message Bus subscription topic
# name of expected result file to be used for comparison
#
# It will generate two output files as it runs the tests, a .metadata file
# that is exactly what was read from the message bug and a .json file where
# this is expanded so it can be tested line for line with the expected
# json file
#

test_name=$1
publication_metadata=$2
subscription_topic=$3
expected_json=$4

if [[ $test_name == "" ]]; then
    echo "USAGE:"
    echo "$0 test_name metadata_publication_file subscription_topic expected_json_file"
    echo "please include the test name"
    exit 1
fi
if [[ $publication_metadata == "" ]]; then
    echo "USAGE:"
    echo "$0 test_name metadata_publication_file subscription_topic expected_json_file"
    echo "please include the filename of metadata to publish"
    exit 1
fi
if [[ $subscription_topic == "" ]]; then
    echo "USAGE:"
    echo "$0 test_name metadata_publication_file subscription_topic expected_json_file"
    echo "please include the subscription topic"
    exit 1
fi
if [[ $expected_json == "" ]]; then
    echo "USAGE:"
    echo "$0 test_name metadata_publication_file subscription_topic expected_json_file"
    echo "please include the expected JSON filename"
    exit 1
fi


received="_received"

# compact JSON read from the Message Bus
received_metadata=$test_name$received.metadata

# multi-line JSON converted from received_metadata
received_json=$test_name$received.json
echo ""
echo ""
echo "TESTING: $test_name"
#echo "publication metadata:     $publication_metadata"
#echo "subscription topic:       $subscription_topic"
#echo "result metadata filename: $received_metadata"
#echo "result JSON filename:     $received_json"
#echo "expected JSON fileame:    $expected_json"


# delete prior generated files
rm -f $received_metadata
rm -f $received_json

# subscribe to the versioninfo topic:
mosquitto_sub -t $subscription_topic > $received_metadata &
mosquitto_pid="$!"

./elkless_replayer $publication_metadata > /dev/null

# Wait a few seconds for a response
sleep 2 

# kill mosquitto
kill $mosquitto_pid

# pretty-print the last line of the temp file
tail -1 $received_metadata | jq > $received_json

echo ""

# Only the timestamps should differ
echo "Diffing expected and received files:"
diff $expected_json $received_json
