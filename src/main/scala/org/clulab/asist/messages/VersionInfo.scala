package org.clulab.asist.messages

import org.clulab.asist.agents.DialogAgent
import buildinfo.BuildInfo
import com.typesafe.config.Config

/**
 *  Authors:  Joseph Astier, Adarsh Pyarelal, Rebecca Sharp
 *
 *  Updated:  2021 August
 *
 *  Testbed version info, based on:
 *
 *  https://gitlab.asist.aptima.com/asist/testbed/-/blob/develop/MessageSpecs/Agent/versioninfo/agent_versioninfo.md
 *
 *  This message is generated by the Dialog Agent whenever there is a trial 
 *  start message published on the message bus
 */

/** Configuration settings */
case class VersionInfoDataConfig(
  name: String = null,
  value: String = null,
)

/** channel on the Message Bus */
case class VersionInfoDataMessageChannel(
  topic: String = null,
  message_type: String = null,
  sub_type: String = null,
)

/** Part of the Info class */
case class VersionInfoData(
  agent_name: String = null,
  owner: String = null,
  version: String = null,
  source: Seq[String] = List(),
  dependencies: Seq[String] = List(),
  config: Seq[VersionInfoDataConfig] = List(),
  publishes: Seq[VersionInfoDataMessageChannel] = List(),
  subscribes: Seq[VersionInfoDataMessageChannel] = List()
)

/** Contains the full data of the Version Info message */
case class VersionInfo (
  header: CommonHeader,
  msg: CommonMsg,
  data: VersionInfoData
) 

/** Same as VersionInfo but with Message Bus topic */
case class VersionInfoMetadata(
  topic: String,
  header: CommonHeader,
  msg: CommonMsg,
  data: VersionInfoData
) 

object VersionInfoMetadata {
  def apply(
    config: Config, 
    trialMessage: TrialMessage,
    timestamp: String
  ): VersionInfoMetadata = {
    val versionInfo = VersionInfo(config, trialMessage, timestamp)
    VersionInfoMetadata(
      config.getString("VersionInfo.topic"),
      versionInfo.header,
      versionInfo.msg,
      versionInfo.data
    )
  }
}

// Return a VersionInfo populated with the current DialogAgent 
// testbed configuration
object VersionInfo 
{

  def apply(
    config: Config,
    trialMessage: TrialMessage,
    timestamp: String
  ): VersionInfo = {
    val testbed = config.getString("VersionInfo.testbed")
    val dataSource = s"${testbed}:${BuildInfo.version}"
    VersionInfo(
      CommonHeader(
        timestamp = timestamp,
        message_type = config.getString("VersionInfo.header.message_type"),
        version = trialMessage.header.version
      ),
      CommonMsg(
        timestamp = timestamp,
        source = config.getString("VersionInfo.msg.source"),
        sub_type = config.getString("VersionInfo.msg.sub_type"),
        version = BuildInfo.version,
        trial_id = trialMessage.msg.trial_id,
        experiment_id = trialMessage.msg.experiment_id
      ),
      VersionInfoData(
        agent_name = config.getString("VersionInfo.data.agent_name"),
        owner = config.getString("VersionInfo.data.owner"),
        version = BuildInfo.version,
        source = List(dataSource),
        dependencies = List(),
        config = List(),
        publishes = List(
          VersionInfoDataMessageChannel(
            config.getString("DialogAgent.topic"),
            config.getString("DialogAgent.header.message_type"),
            config.getString("DialogAgent.msg.sub_type")
          ),
          VersionInfoDataMessageChannel(
            config.getString("VersionInfo.topic"),
            config.getString("VersionInfo.header.message_type"),
            config.getString("VersionInfo.msg.sub_type")
          ),
          VersionInfoDataMessageChannel(
            config.getString("Heartbeat.topic"),
            config.getString("Heartbeat.header.message_type"),
            config.getString("Heartbeat.msg.sub_type")
          )
        ),
        subscribes = List(
          VersionInfoDataMessageChannel(
            config.getString("Trial.topic"),
            config.getString("Trial.header.message_type"),
            config.getString("Trial.msg.sub_type")
          ),
          VersionInfoDataMessageChannel(
            config.getString("Asr.topic"),
            config.getString("Asr.header.message_type"),
            config.getString("Asr.msg.sub_type")
          ),
          VersionInfoDataMessageChannel(
            config.getString("Chat.topic"),
            config.getString("Chat.header.message_type"),
            config.getString("Chat.msg.sub_type")
          )
        )
      )
    )
  }
}
