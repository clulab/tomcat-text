package org.clulab.asist.messages

import ai.lum.common.ConfigFactory
import org.clulab.asist.agents.DialogAgent
import buildinfo.BuildInfo
import com.typesafe.config.Config
import java.time.Clock

/**
 *  Authors:  Joseph Astier, Adarsh Pyarelal
 *
 *  Testbed version info, based on:
 *
 *  https://gitlab.asist.aptima.com/asist/testbed/-/blob/develop/MessageSpecs/Agent/versioninfo/agent_versioninfo.md
 *
 *  This message is generated by the Dialog Agent whenever a trial 
 *  start message is received on the message bus
 */

/** Configuration settings */
case class VersionInfoDataConfig(
  name: String = "N/A",
  value: String = "N/A",
)

/** publication or subscription topic on the Message Bus */
case class VersionInfoDataMessageChannel(
  topic: String = "N/A",
  message_type: String = "N/A",
  sub_type: String = "N/A",
)

/** Part of the Info class */
case class VersionInfoData(
  agent_name: String = "N/A",
  owner: String = "N/A",
  version: String = "N/A",
  source: Seq[String] = List(),
  dependencies: Seq[String] = List(),
  config: Seq[VersionInfoDataConfig] = List(),
  publishes: Seq[VersionInfoDataMessageChannel] = List(),
  subscribes: Seq[VersionInfoDataMessageChannel] = List()
)

/** Contains the full data of the Version Info message */
case class VersionInfo (
  header: CommonHeader,
  msg: CommonMsg,
  data: VersionInfoData
) 

// Return a VersionInfo populated with the current DialogAgent 
// testbed configuration
object VersionInfo 
{
  val config: Config = ConfigFactory.load()
  val testbed = config.getString("VersionInfo.testbed")
  val dataSource = s"${testbed}:${BuildInfo.version}"

  def apply(trialMessage: TrialMessage): VersionInfo = {
    val timestamp = Clock.systemUTC.instant.toString
    VersionInfo(
      template.header.copy(
        timestamp = timestamp,
        version = trialMessage.header.version
      ),
      template.msg.copy(
        timestamp = timestamp,
        trial_id = trialMessage.msg.trial_id,
        experiment_id = trialMessage.msg.experiment_id
      ),
      template.data.copy()
    )
  }

  // remember config settings
  val template: VersionInfo = 
    VersionInfo(
      CommonHeader(
        message_type = config.getString("VersionInfo.header.message_type"),
      ),
      CommonMsg(
        source = config.getString("VersionInfo.msg.source"),
        sub_type = config.getString("VersionInfo.msg.sub_type"),
        version = BuildInfo.version,
      ),
      VersionInfoData(
        agent_name = config.getString("VersionInfo.data.agent_name"),
        owner = config.getString("VersionInfo.data.owner"),
        version = BuildInfo.version,
        source = List(dataSource),
        dependencies = List(),
        config = List(),
        publishes = List(
          VersionInfoDataMessageChannel(
            config.getString("DialogAgent.topic"),
            config.getString("DialogAgent.header.message_type"),
            config.getString("DialogAgent.msg.sub_type")
          ),
          VersionInfoDataMessageChannel(
            config.getString("VersionInfo.topic"),
            config.getString("VersionInfo.header.message_type"),
            config.getString("VersionInfo.msg.sub_type")
          ),
          VersionInfoDataMessageChannel(
            config.getString("Heartbeat.topic"),
            config.getString("Heartbeat.header.message_type"),
            config.getString("Heartbeat.msg.sub_type")
          )
        ),
        subscribes = List(
          VersionInfoDataMessageChannel(
            config.getString("Trial.topic"),
            config.getString("Trial.header.message_type"),
            config.getString("Trial.msg.sub_type.trial_start")
          ),
          VersionInfoDataMessageChannel(
            config.getString("Trial.topic"),
            config.getString("Trial.header.message_type"),
            config.getString("Trial.msg.sub_type.trial_stop")
          ),
          VersionInfoDataMessageChannel(
            config.getString("Asr.topic"),
            config.getString("Asr.header.message_type"),
            config.getString("Asr.msg.sub_type")
          ),
          VersionInfoDataMessageChannel(
            config.getString("Chat.topic"),
            config.getString("Chat.header.message_type"),
            config.getString("Chat.msg.sub_type")
          )
        )
      )
    )
  
}
