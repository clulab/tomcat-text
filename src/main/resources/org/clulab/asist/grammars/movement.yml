vars: org/clulab/asist/grammars/vars.yml


rules:

  - name: move_nmod_action
    priority: ${ rulepriority }
    label: MoveTo
    pattern: |
      trigger = [lemma=/(?i)^(${ moveto_triggers })$/ & tag=/^V/] (?! ([]? away) | (to [tag=/^VB/]))
      target: Location =  >/nmod_(through|to|toward|by|over|in_front_of|next_to)/ | >/${objects}/
      agent: Entity? = >/${agents}/

  - name: move_go_to
    priority: ${ rulepriority }
    label: MoveTo
    example: "Let's go to i4"
    pattern: |
      trigger = [lemma=/(?i)^go$/ & tag=/^V/] [word=to] (?! ([]? away))
      target: Location =  >nmod_to | >xcomp
      agent: Entity? = >/${agents}/

  - name: move_toward_entity_action
    priority: ${ rulepriority }
    label: MoveTo
    pattern: |
      trigger = [lemma=/(?i)^(${ moveto_triggers })$/ & tag=/^V/] (?! ([]? away) | (to [tag=/^VB/]))
      target: Entity =  >/nmod_(through|to|toward|by|over|in_front_of|next_to)/
      agent: Entity? = >/${agents}/

  - name: move_entity_action
    priority: ${ rulepriority }
    example: "I'll move this"
    label: MoveEntity
    pattern: |
      trigger = [lemma=/(?i)^(${ moveto_triggers })$/ & tag=/^V/] (?! ([]? away) | (to [tag=/^VB/]) | ([]? far))
      target: Entity =  >/${objects}/ [!mention=Victim]
      agent: Entity? = >/${agents}/

  - name: move_nmod_direction
    priority: ${ rulepriority }
    label: Move
    pattern: |
      trigger = [lemma=/(?i)^(${ moveto_triggers })$/ & tag=/^V/] (?! ([]? away) | (to [tag=/^VB/]))
      direction: Direction = >/advmod/
      agent: Entity? = >/${agents}/

  - name: move_nmod_direction_towards_item
    priority: ${ rulepriority }
    label: Move
    pattern: |
      trigger = [lemma=/(?i)^(${ moveto_triggers })$/ & tag=/^V/] (?! ([]? away) | (to [tag=/^VB/]))
      target: Item = >/nmod_(through|to|toward|by|over|in_front_of|next_to)/ | >dobj >/nmod_(through|to|toward|by|over|in_front_of|next_to)/
      agent: Entity? = >/${agents}/

  - name: move_keep_false
    priority: ${ genericpriority }
    label: Move
    keep: false
    pattern: |
      trigger = (?<! [lemma=let] [] )[lemma=/(?i)^(${ moveto_triggers })$/ & tag=/^V/ & !mention=Move] (?! ([]? away) |
      (to [tag=/^VB/]| [tag=/^V/])
      |ahead|on)
      agent: Entity? = >/${agents}/

  - name: move_deixis_action
    priority: ${ rulepriority }
    label: MoveTo
    pattern: |
      trigger = (?<! there we) [lemma=/(?i)${ moveto_triggers }/] (?! ([]? away) | (to [tag=/^VB/]))
      target: Deictic = >/nmod_(through|to|towards)/ | >advmod
      agent: Entity? = >/${agents}/

  - name: move_explicit_1
    example: "I'll be right there.  I will be there in a minute."
    priority: ${ rulepriority }
    label: MoveTo
    type: token
    pattern: |
      @agent:Entity (?<trigger> will be) right? (@target:Deictic | (?<target> over))

  - name: leave_deixis_action
    priority: ${ rulepriority }
    label: MoveFrom
    pattern: |
      trigger = [lemma=/(?i)${ movefrom_triggers }/ & !outgoing=/xcomp|dobj|ccomp/] | [lemma=go] /(away|from)/
      target: Deictic = >/nmod_(away|from)/ | >advmod
      agent: Entity? = >/${agents}/

  - name: leave_nmod_action
    priority: ${ rulepriority }
    label: MoveFrom
    pattern: |
      trigger = [lemma=/(?i)^(${ movefrom_triggers })$/ & tag=/^V/ & !outgoing=/^(xcomp|nmod|ccomp)/] | [lemma=go] /(away|from)/
      target: Location =  (>/nmod_(away|from)/ | >/${objects}/) [!lemma=door]
      agent: Entity? = >/${agents}/

  - name: leave_no_location
    priority: ${ rulepriority }
    label: MoveFrom
    keep: false
    pattern: |
      trigger = (?<! have ) [lemma=/(?i)^(${ movefrom_triggers })$/ & tag=/^V/ & !outgoing=/^(xcomp|dobj|nmod|ccomp)/
      & !tag=VBD] | [lemma=go] away
      agent: Entity? = >/${agents}/

  - name: enter_action
    priority: ${ rulepriority }
    label: Enter
    pattern: |
      trigger = [lemma=/enter/ & tag=/^V/]
      target: Location = >dobj
      agent: Entity? = >/${agents}/

  - name: enter_into_action
    priority: ${ rulepriority }
    label: Enter
    pattern: |
      trigger = [lemma=/(?i)^(${ moveto_triggers }|enter)$/ & tag=/^V/] (?! ([]? away) | (to [tag=/^VB/]))
      target: Location =  >/nmod_(inside|into)/
      agent: Entity? = >/${agents}/

  - name: enter_into_deixis_action
    priority: ${ rulepriority }
    label: Enter
    pattern: |
      trigger = [lemma=/(?i)${ moveto_triggers }|enter/] (?! ([]? away) | (to [tag=/^VB/]))
      target: Deictic = >/nmod_(inside|into)/
      agent: Entity? = >/${agents}/

  - name: on_my_way
    priority: ${ rulepriority }
    label: OnMyWay
    pattern: |
      trigger = [word=/(?i)^on$/] [word=my] [word=way]
      target: Location? =  >/nmod_(through|to|toward|by|over|in_front_of|next_to)/ | >/${objects}/

  - name: on_my_way_to_you
    priority: ${ rulepriority }
    label: OnMyWay
    pattern: |
      trigger = [word=/(?i)^on$/] [word=my] [word=way]
      target: Entity? =  >/nmod_to/

  - name: coming_on_my_way_token
    priority: ${ rulepriority }
    label: OnMyWay
    type: token
    pattern: |
      [word=/(?i)^I$/] [word=am] [word=coming] (?! [word=to])

