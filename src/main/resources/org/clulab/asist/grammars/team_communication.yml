vars: org/clulab/asist/grammars/vars.yml

rules:

  - name: prep_need_role
    priority: ${ rulepriority }
    label: Need
    pattern: |
      trigger = [lemma=/(need)/ & tag=/^V/]
      person: Entity? = >/nsubj*/
      role: Role = >dobj

  - name: prep_need_item
    priority: ${ rulepriority }
    label: Need
    pattern: |
      trigger = [lemma=/(need)/ & tag=/^V/]
      person: Entity? = >/nsubj*/
      item: Item = >dobj

  - name: prep_need_action
    priority: ${ rulepriority }
    label: Need
    pattern: |
      trigger = [lemma=/(need)/ & tag=/^V/]
      person: Entity? = >/nsubj*/
      action: SimpleActions = >xcomp


  - name: continue_action
    priority: ${ rulepriority }
    label: Continue
    pattern: |
      trigger = [lemma=/(?i)^(${ continue_triggers })/]
      person: Entity = >/${agents}/

  - name: change_priority
    priority: ${ rulepriority }
    label: ChangePriority
    pattern: |
      trigger = [lemma=/(?i)^(${ change_priority_triggers })/]
      target: Victim = >dobj
      person: Entity? = >/${agents}/

  - name: change_priority2
    priority: ${ rulepriority }
    label: ChangePriority
    pattern: |
      trigger = [lemma=/(?i)^(${ change_priority_triggers })/]
      target: Person = >dobj
      person: Entity? = >/${agents}/
### split this one too to capture victim and person seperately


  - name: role_switch
    priority: ${ rulepriority }
    label: RoleSwitch
    pattern: |
      trigger = [lemma=/(?i)^(${ role_switch_triggers })/ & tag=/^V/]
      agent: Entity? = >/(${agents})/
      target: Role = >/nmod_to|xcomp/

  - name: role_declare
    priority: ${ rulepriority }
    label: RoleDeclare
    example: "I am an engineer"
    pattern: |
      trigger = [lemma=/(?i)^be/]
      target: Role = <cop
      agent: Entity = <cop >/(${agents})/

  - name: role_switch_change_to
    priority: ${ rulepriority }
    label: RoleSwitch
    pattern: |
      trigger = [lemma=/change/]
      agent: Entity? = >/(${agents})/
      target: Role = >/nmod_to/

  - name: location_report
    priority: ${ rulepriority }
    label: ReportLocation
    pattern: |
      trigger = [lemma=/(?i)^(${ exist_triggers })/]
      location: Location = </cop/
      person: Entity? =
        </cop/
        >/nsubj/


##--------------------------------- knowledge sharing

  - name: existential
    priority: ${ rulepriority }
    label: KnowledgeSharing
    example: "There is a victim here. There is a victim behind this rubble. There is a victim in the library."
    pattern: |
      trigger = [word=/(?i)^there/] [lemma=/(?i)^(${ exist_triggers })/]
      exists: Victim = >/${agents}/
      location: Location? = >/${preps}|advmod|${positional_preps}/|
               >/${agents}/
               >/${preps}/
      obstacle: Obstacle? = >/${agents}/
                            >/${positional_preps}/
      map: Map? = >/${positional_preps}/

  - name: existential2
    priority: ${ rulepriority }
    label: KnowledgeSharing
    example: "There is a guy here"
    pattern: |
      trigger = [word=/(?i)^there/] [lemma=/(?i)^(${ exist_triggers })/]
      exists: Person = >/${agents}/
      location: Location? = >/${preps}|advmod|${positional_preps}/|
               >/${agents}/
               >/${preps}/
      obstacle: Obstacle? = >/${agents}/
                            >/${positional_preps}/
      map: Map? = >/${positional_preps}/

  - name: existential3
    priority: ${ rulepriority }
    label: KnowledgeSharing
    example: "There is some rubble here"
    pattern: |
      trigger = [word=/(?i)^there/] [lemma=/(?i)^(${ exist_triggers })/]
      exists: EventLike = >/${agents}/
      location: Location? = >/${preps}|advmod|${positional_preps}/|
               >/${agents}/
               >/${preps}/
      map: Map? = >/${positional_preps}/

  - name: existential4
    priority: ${ rulepriority }
    label: KnowledgeSharing
    example: "There is a medkit in this room"
    pattern: |
      trigger = [word=/(?i)^there/] [lemma=/(?i)^(${ exist_triggers })/]
      exists: Item = >/${agents}/
      location: Location? = >/advmod/|
               >/${agents}/
               >/${preps}/
      obstacle: Obstacle? = >/${agents}/
                            >/${positional_preps}/
      map: Map? = >/${positional_preps}/
