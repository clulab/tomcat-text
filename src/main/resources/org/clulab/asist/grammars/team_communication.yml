vars: org/clulab/asist/grammars/vars.yml

rules:

  - name: instruction_command
    priority: ${ rulepriority }
    label: Instruction
    example: "Help him!"
    keep: true
    pattern: |
      trigger = (?<! (I|[tag=/^MD$|^WP$|^WRB$|VBD$/]|to|[lemma=do]you|[lemma=do][lemma=not]|or|oh) []*) [tag=VB & mention=Action & !mention=Instruction & !lemma=let & !lemma=be] (?! [][][]|[tag=/\./]|[lemma=not][lemma=worry]|(you)|([]* I))
      agent: Entity? = >/^nsubj/ [!mention=Self]

  - name: instruction_let
    priority: ${ rulepriority }
    label: Instruction
    example: "Let's go"
    keep: true
    pattern: |
      trigger = (?<! (I|[tag=/^MD$|^WP$|^WRB$|VBD$/]|to|[lemma=do]you|[lemma=do][lemma=not]|or|oh) []*) [tag=VB & mention=Action & !mention=Instruction & lemma=let & !lemma=be] (?! me|[lemma=not][lemma=worry]|(you)|([]* I))
      agent: Entity? = >/^nsubj/ [!mention=Self]

  - name: instruction_command_topic_let
    priority: ${ rulepriority }
    label: Instruction
    example: "Help him save the victim! Don't enter D2."
    pattern: |
      trigger = (?<! (I|[tag=/^MD$|^WP$|^WRB$|VBD$/]|to|[lemma=do]you|[lemma=do][lemma=not]|or|oh) []*) [tag=VB & mention=Action & lemma=let] (?! me|(you)|([]* I))
      agent: Entity? = >/^nsubj/ [!mention=Self]
      topic: Action = >/dobj|ccomp/ [!mention=Instruction] | <aux [!mention=Instruction]

  - name: instruction_command_topic
    priority: ${ rulepriority }
    label: Instruction
    example: "Help him save the victim! Don't enter D2."
    pattern: |
      trigger = (?<! (I|[tag=/^MD$|^WP$|^WRB$|VBD$/]|to|[lemma=do]you|[lemma=do][lemma=not]|or|oh) []*) [tag=VB & mention=Action & !lemma=let & !lemma=be] (?! (you)|([]* I))
      agent: Entity? = >/^nsubj/ [!mention=Self]
      topic: Action = >/dobj|ccomp/ | <aux

  - name: instruction_take_care_of
    priority: ${ rulepriority }
    label: Instruction
    example: "Could you take care of the rubble, blue?"
    pattern: |
      trigger = [word=/(?i)^(Could|Will|Can|Would)/](you)(please?)(take care of)(?=[tag=/^DT?/])(?=[tag=/^N?/])
      agent: Entity? = </aux/ >/^nsubj/
      topic: Action = </aux/

  - name: prep_need_role
    priority: ${ rulepriority }
    label: NeedRole
    example: "We need a searcher"
    pattern: |
      trigger = [lemma=/(need)/ & tag=/^V/]
      agent: Entity? = >/nsubj*/
      role: Role = >dobj

  - name: prep_need_item
    priority: ${ rulepriority }
    label: NeedItem
    example: "I need a medkit"
    pattern: |
      trigger = [lemma=/(need)/ & tag=/^V/]
      agent: Entity? = >/nsubj*/
      item: Item = >dobj

  - name: prep_need_action
    priority: ${ rulepriority }
    label: NeedAction
    example: "I need you to save this guy."
    pattern: |
      trigger = [lemma=/(need)/ & tag=/^V/]
      agent: Entity? = >/nsubj*/
      action: Action = >xcomp


  - name: change_priority
    priority: ${ rulepriority }
    label: ChangePriority
    example: "We should prioritize critical victims"
    pattern: |
      trigger = [lemma=/(?i)^(${ change_priority_triggers })/]
      target: Victim = >dobj
      agent: Entity? = >/${agents}/

  - name: change_priority2
    priority: ${ rulepriority }
    label: ChangePriority
    example: "We should prioritize this guy"
    pattern: |
      trigger = [lemma=/(?i)^(${ change_priority_triggers })/]
      target: Person = >dobj
      agent: Entity? = >/${agents}/
### split this one too to capture victim and person seperately


  - name: role_switch
    priority: ${ rulepriority }
    label: RoleSwitch
    example: "I'm gonna switch to engineer"
    pattern: |
      trigger = [lemma=/(?i)^(${ role_switch_triggers })/ & tag=/^V/]
      agent: Entity? = >/(${agents})/
      target: Role = >/nmod_to|xcomp/

  - name: role_declare
    priority: ${ rulepriority }
    label: RoleDeclare
    example: "I am an engineer"
    pattern: |
      trigger = (?<! @QuestionParticle) [lemma=/(?i)^be/ & tag=VBP]
      target: Role = <cop
      agent: Entity = <cop >/(${agents})/

  - name: role_switch_change_to
    priority: ${ rulepriority }
    label: RoleSwitch
    example: "I'm gonna change to engineer"
    pattern: |
      trigger = [lemma=/change/ | word=/searching/]
      agent: Entity? = >/(${agents})/
      target: Role = >/nmod_to/

  - name: threatroom_report1
    priority: ${ rulepriority }
    example: "B3 is a threat room"
    label: ReportThreatRoom
    pattern: |
      trigger = [lemma=/(?i)^(${ exist_triggers })/]
      threat: ThreatRoom = </cop/ [!outgoing=aux] # prevent things like "I will be" or "I could be"
      room: Room =
        </cop/
        >/nsubj/

  - name: threatroom_report2
    priority: ${ rulepriority }
    example: "B3 has a threat sign| C3 is marked as a threat"
    label: ReportThreatRoom
    pattern: |
      trigger = [tag=/^VB/]
      threat: ThreatSign = >/dobj|nmod/
      room: Room =
        >/nsubj/

  - name: threatroom_report3
    priority: ${ rulepriority }
    example: "B3 has a threat marker"
    label: ReportThreatRoom
    pattern: |
      trigger = [tag=/^VB/]
      threat: ThreatRoomMarker = >/dobj/
      room: Room =
        >/nsubj/

  - name: location_report
    priority: ${ rulepriority }
    example: "I'm in the library"
    label: ReportLocation
    pattern: |
      trigger = (?<! [mention=Question] []*) [lemma=/(?i)^(${ exist_triggers })/]
      location: Location = </cop/ [!outgoing=aux] # prevent things like "I will be" or "I could be"
      agent: Entity =
        </cop/
        >/nsubj/

  - name: report_broken_item
    priority: ${ rulepriority }
    label: ToolBroken
    pattern: |
      trigger = [lemma=/(?i)broken|break/]
      tool: Tool = >/nsubj|dobj/

  - name: report_door_open
    priority: ${ rulepriority }
    label: DoorOpen
    pattern: |
      trigger = door
      status: Concept = </nsubj/ >xcomp? [lemma=open] | <dobj [lemma=open]

  - name: report_door_closed
    priority: ${ rulepriority }
    label: DoorClosed
    pattern: |
      trigger = door
      status: Concept = </nsubj/ >xcomp? [lemma=/\b(close|shut)\b/] | <dobj [lemma=/\b(close|shut)\b/]


  ##--------------------------------- knowledge sharing

  - name: existential
    priority: ${ rulepriority }
    label: KnowledgeSharing
    example: "There is a victim here. There is a victim behind this rubble. There is a victim in the library."
    pattern: |
      trigger = [word=/(?i)^there/] [lemma=/(?i)^(${ exist_triggers })/]
      exists: Victim = >/${agents}/
      location: Location? = >/${preps}|advmod|${positional_preps}/|
               >/${agents}/
               >/${preps}/
      obstacle: Obstacle? = >/${agents}/
                            >/${positional_preps}/
      map: Map? = >/${positional_preps}/

  - name: existential2
    priority: ${ rulepriority }
    label: KnowledgeSharing
    example: "There is a guy here"
    pattern: |
      trigger = [word=/(?i)^there/] [lemma=/(?i)^(${ exist_triggers })/]
      exists: Person = >/${agents}/
      location: Location? = >/${preps}|advmod|${positional_preps}/|
               >/${agents}/
               >/${preps}/
      obstacle: Obstacle? = >/${agents}/
                            >/${positional_preps}/
      map: Map? = >/${positional_preps}/

  - name: existential3
    priority: ${ rulepriority }
    label: KnowledgeSharing
    example: "There is some rubble here"
    pattern: |
      trigger = [word=/(?i)^there/] [lemma=/(?i)^(${ exist_triggers })/]
      exists: EventLike = >/${agents}/
      location: Location? = >/${preps}|advmod|${positional_preps}/|
               >/${agents}/
               >/${preps}/
      map: Map? = >/${positional_preps}/

  - name: existential4
    priority: ${ rulepriority }
    label: KnowledgeSharing
    example: "There is a medkit in this room"
    pattern: |
      trigger = [word=/(?i)^there/] [lemma=/(?i)^(${ exist_triggers })/]
      exists: Item = >/${agents}/
      location: Location? = >/advmod/|
               >/${agents}/
               >/${preps}/
      obstacle: Obstacle? = >/${agents}/
                            >/${positional_preps}/
      map: Map? = >/${positional_preps}/

  - name: existential5
    priority: ${ rulepriority }
    label: KnowledgeSharing
    example: "There is a meeting in this room"
    pattern: |
      trigger = [word=/(?i)^there/] [lemma=/(?i)^(${ exist_triggers })/]
      exists: PuzzleConcept = >/${agents}/
      location: Location? = >/advmod/|
               >/${agents}/
               >/${preps}/
      obstacle: Obstacle? = >/${agents}/
                            >/${positional_preps}/
      map: Map? = >/${positional_preps}/

  - name: found_victim
    priority: ${ rulepriority }
    label: KnowledgeSharing
    example: "I found a victim in the library. I detected a victim in D2."
    pattern: |
      trigger =[lemma=/(?i)^find|found|locate|spot|detect/]
      exists: Victim = >/${objects}/
      location: Location? = >/${objects}/ >/advmod/|
               >/${objects}/ >/${preps}/|
               >/${objects}/ >/${positional_preps_liberal}/|
               >/${preps}/|
               >/advmod/|
               >dobj >acl >/${positional_preps_liberal}/

  - name: found_victim_reverse
    priority: ${ rulepriority }
    label: KnowledgeSharing
    example: "Victim detected in D2. Victim found in A1."
    pattern: |
      trigger =[lemma=/(?i)^find|found|locate|spot|detect/]
      exists: Victim = <acl
      location: Location? = >/${positional_preps_liberal}/

  - name: found_victim_have
    priority: ${ rulepriority }
    label: KnowledgeSharing
    example: "I have a victim here"
    pattern: |
      trigger =[lemma=/(?i)have/]
      exists: Victim = >/${objects}/
      location: Location? = >/${objects}/ >/advmod/|
               >/${objects}/ >/${preps}/|
               >/${preps}/|
               >/advmod/

  - name: found_victim_got
    priority: ${ rulepriority }
    label: KnowledgeSharing
    example: "I have a victim here"
    pattern: |
      trigger =[word=/(?i)got$/]
      exists: Victim = >/${objects}/
      location: Location? = >/${objects}/ >/advmod/|
               >/${objects}/ >/${preps}/|
               >/${preps}/|
               >/advmod/

  - name: found_thing_have
    priority: ${ rulepriority }
    label: KnowledgeSharing
    example: "I have some rubble here"
    pattern: |
      trigger =[lemma=/(?i)have/]
      exists: EventLike = >/${objects}/
      location: Location? = >/${objects}/ >/advmod/|
               >/${objects}/ >/${preps}/|
               >/${preps}/|
               >/advmod/

  - name: found_thing_got
    priority: ${ rulepriority }
    label: KnowledgeSharing
    example: "I got some rubble here"
    pattern: |
      trigger =[word=/(?i)got$/]
      exists: EventLike = >/${objects}/
      location: Location? = >/${objects}/ >/advmod/|
               >/${objects}/ >/${preps}/|
               >/${preps}/|
               >/advmod/

  - name: room_clear
    priority: ${ rulepriority }
    label: RoomClear
    type: token
    example: "leave this is why I believe this room is clear our remember to put aside the outside of the room to show that they're cleared"
    pattern: |
      @target:Infrastructure [lemma=be] (?<trigger> clear)


  - name: i_am_stuck
    priority: ${ rulepriority }
    label: Stuck
    example: "I'm stuck. I am frozen"
    pattern: |
      trigger = [word=/(?i)^immobilized|^frozen|^stuck/]
      agent: Entity? = >/${agents}/
      location: Location? = >/${objects}/ >/advmod/|
               >/${objects}/ >/${preps}/|
               >/${preps}/|
               >/advmod/

  - name: cant_move
    priority: ${ rulepriority }
    label: Stuck
    type: token
    example: "I can't move"
    pattern: |
      @target:Self [lemma=can] [lemma=not] (?<trigger> move)


  - name: "HelpRequests_simple"
    label: HelpRequest
    example: "I need help."
    priority: ${ rulepriority }
    pattern: |
      trigger = [word=/(?i)need|require/] []? [word=/(?i)help|assistance/ & tag=/NN|^VB$/]
      agent: Self? = >/${agents}/
      location: Location? = >/${preps}/|
               >/advmod/

  - name: "HelpRequests_complex"
    label: HelpRequest
    example: "Can you help me?"
    priority: ${ rulepriority }
    pattern: |
      trigger = (?<= [word=/(?i)can|could|will|would/] []) [lemma=/assist|help/]
      agent: Entity? = >dobj
      helper: Entity? = >nsubj
      location: Location? = >/${preps}/|
               >/advmod/

  - name: "HelpRequests_Presence"
    label: NeedPresence
    example: "Engineer, We need you here."
    priority: ${ rulepriority }
    pattern: |
      trigger = [word=/(?i)need|want/] (?! []? [word=to])
      helper: Entity = >nmod:tmod|<acl:relcl
      agent: Self? = >/${agents}/
      location: Location? = >/${preps}/|
               >/advmod/ |
              </^acl/ >advmod

  - name: trapped_A
    label: AmTrapped
    example: "I'm trapped in B2"
    priority: ${ rulepriority }
    pattern: |
      trigger = [word=/(?i)trapped|\bstuck\b|\bdead\b|\bhurt\b/]
      agent: Self = >/nsubj/
      location: Location? = >/${preps}/|
               >/advmod/


  - name: trapped_no_agent
    label: AmTrapped
    example: "I'm trapped in B2"
    priority: ${ rulepriority }
    pattern: |
      trigger = (?<= [lemma=be]|[word=am] )[word=/(?i)trapped|\bstuck\b|\bdead\b|\bhurt\b/]
      agent: Entity? = >/nsubj/
      location: Location? = >/${preps}/|
               >/advmod/

  - name: "HelpOffer"
    label: HelpOffer
    example: "Let me help you. I will help you."
    priority: ${ rulepriority }
    pattern: |
      trigger = [lemma=/assist|help|aid|support/]
      agent: Self = >nsubj|<xcomp >nsubj
      helpee: Entity = >ccomp >nsubj | >ccomp | >dep | >dobj
      location: Location? = >/${preps}/|
               >/advmod/


  - name: "HelpOffer_no_helpee"
    label: HelpOffer
    example: "Let me help. I will help."
    priority: ${ second_priority }
    pattern: |
      trigger = [lemma=/assist|help|aid|support/ & !mention=HelpOffer]
      agent: Self = >nsubj|<xcomp >nsubj
      location: Location? = >/${preps}/|
               >/advmod/

  - name: "Help_command"
    label: HelpCommand
    example: "You should help him."
    priority: ${ rulepriority }
    pattern: |
      trigger = [lemma=/assist|help|aid|support/]
      agent: Entity = >nsubj [!mention=Self] |<xcomp >nsubj [!mention=Self]
      helpee: Entity = >ccomp >nsubj [!mention=You] | >ccomp [!mention=You] | >dep [!mention=You] | >dobj [!mention=You]
      location: Location? = >/${preps}/|
               >/advmod/

  - name: "Help_command_no_agent"
    label: HelpCommand
    example: "You should help him. Help me!"
    priority: ${ second_priority }
    pattern: |
      trigger = [lemma=/assist|help|aid|support/ & !mention=HelpRequest & !mention=HelpOffer]
      helpee: Entity = >ccomp >nsubj [!mention=You] | >ccomp [!mention=You] | >dep [!mention=You] | >dobj [!mention=You]
      location: Location? = >/${preps}/|
               >/advmod/
