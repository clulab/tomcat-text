vars: org/clulab/asist/grammars/vars.yml

rules:

  - name: victim
    priority: ${ rulepriority }
    label: Victim
    type: token
    keep: true
    pattern: |
      (?<! [lemma=/^no$|^critical(ly)?/] injured?) [lemma=/(?i)(${ victim_triggers })/] (?! [word=type])

  - name: critical_victim
    priority: ${ rulepriority }
    label: CriticalVictim
    type: token
    keep: true
    pattern: |
      [lemma=/(?i)critical/] [lemma=/(?i)(${ victim_triggers })/]

  - name: critical_solitary
    priority: ${ rulepriority }
    label: CriticalVictim
    type: token
    keep: true
    pattern: |
      (?<=a|an|the|some) [word=/(?i)critical/] (?! [word=marker]| [word=/(?i)^zone/])

  - name: critical_injured_victim
    priority: ${ rulepriority }
    label: CriticalVictim
    type: token
    keep: true
    pattern: |
      critically injured [lemma=/(patient|victim|one)/]

  - name: critical_victim_one
    priority: ${ rulepriority }
    label: CriticalVictim
    type: token
    keep: true
    pattern: |
      [lemma=/(?i)critical/] [lemma=/(?i)^one$|^dude|^guy$/]

  - name: critical_victim_one_c
    priority: ${ rulepriority }
    label: CriticalVictim
    type: token
    keep: true
    pattern: |
      [lemma=/(?i)^c$/] [lemma=/(?i)^one$|^dude|^guy$/]

  - name: regular_victim_one
    priority: ${ rulepriority }
    label: RegularVictim
    type: token
    keep: true
    pattern: |
      [lemma=/regular|normal/] [lemma=/^one$|^dude|^guy$|victim/]

  - name: no_victim_one
    priority: ${ rulepriority }
    label: NoVictim
    type: token
    keep: true
    pattern: |
      [lemma=/\bno\b/] [lemma=/\bone\b|victim/]

# ---- victim types ----

# we're picking up all variations of type B here, ASR sometimes transcribes this as "type b" and "type P", hence lemma=/(?i)(b.?)|P/
  - name: victimB
    priority: ${ rulepriority }
    label: VictimTypeB
    type: token
    keep: true
    pattern: |
     [word=/(?i)\b(b.?)|P\b/] [word=of]? [word=type] [lemma=/(?i)(${ victim_triggers })/]? | [lemma=type] [word=/(?i)\b(b.?)|P\b/] [lemma=/(?i)(${ victim_triggers })/]? |
      [lemma=/(?i)(${ victim_triggers })/]? [word=of]? [word=/(?i)\b(b.?)|P\b/] [word=type] |  [lemma=/(?i)(${ victim_triggers })/]? [lemma=type] [word=/(?i)\b(b.?)|P\b/]

  - name: victimA
    priority: ${ rulepriority }
    label: VictimTypeA
    type: token
    keep: true
    pattern: |
      [lemma=/(?i)(${ victim_triggers })/]? [word=of]? [lemma=type] [lemma=/(?i)\ba\b/] | [lemma=type] [lemma=/(?i)\ba\b/] [lemma=/(?i)(${ victim_triggers })/]? |
       [lemma=/(?i)(${ victim_triggers })/] [word=of]? [lemma=/(?i)\ba\b/] [word=type] |  [lemma=/(?i)\ba\b/] [word=type] [lemma=/(?i)(${ victim_triggers })/]

  - name: victimA_a_type
    priority: ${ rulepriority }
    label: VictimTypeA
    type: token
    keep: true
    pattern: |
       [lemma=/(?i)\ba\b/] [word=type] (?! [word=/(?i)\bb.?\b/]|[word=/(?i)\ba\b/]|[word=/(?i)\bc\b/]|[word=see])

  - name: victimA_an_a_type
    priority: ${ rulepriority }
    example: "an a victim"
    label: VictimTypeA
    type: token
    keep: true
    pattern: |
      (?<= [word=an])  [lemma=/(?i)\ba\b/] [word=victim] (?! [word=/(?i)\bb.?\b/]|[word=/(?i)\ba\b/]|[word=/(?i)\bc\b/]|[word=see])

  - name: victimA_an_a_type_keep_false
    priority: ${ rulepriority }
    example: "an a victim"
    label: VictimTypeA
    type: token
    keep: true
    pattern: |
      (?<= [word=an]|[word=the])  [lemma=/(?i)\ba\b/] (?! [word=victim]|[word=/(?i)\bb.?\b/]|[word=/(?i)\ba\b/]|[word=/(?i)\bc\b/]|[word=see])


  - name: victimA_a_b_type
    priority: ${ rulepriority }
    example: "a b victim"
    label: VictimTypeB
    type: token
    keep: true
    pattern: |
      (?<= [word=a])  [lemma=/(?i)\bb\b/] [word=victim] (?! [word=/(?i)\bb.?\b/]|[word=/(?i)\ba\b/]|[word=/(?i)\bc\b/]|[word=see])

  - name: victimA_a_b_type_keep_false
    priority: ${ rulepriority }
    example: "a b victim"
    label: VictimTypeB
    type: token
    keep: false
    pattern: |
      (?<= [word=a]|[word=the])  [lemma=/(?i)\bb\b/] (?! [word=victim]|[word=/(?i)\bb.?\b/]|[word=/(?i)\ba\b/]|[word=/(?i)\bc\b/]|[word=see])

  - name: victimC
    priority: ${ rulepriority }
    label: CriticalVictim
    type: token
    keep: true
    pattern: |
      [lemma=/(?i)(${ victim_triggers })/]? [word=of]? [lemma=type] [lemma=/(?i)\b(c|see)\b/] | [lemma=type] [lemma=/(?i)\b(c|see)\b/] [lemma=/(?i)(${ victim_triggers })/]? |
       [lemma=/(?i)(${ victim_triggers })/]? [word=of]? [lemma=/(?i)\b(c|see)\b/] [word=type] |  [lemma=/(?i)\b(c|see)\b/] [word=type] [lemma=/(?i)(${ victim_triggers })/]?

  - name: victimA_a_c_type
    priority: ${ rulepriority }
    example: "a c victim"
    label: CriticalVictim
    type: token
    keep: true
    pattern: |
      (?<= [word=a])  [lemma=/(?i)\bc\b/] [word=victim] (?! [word=/(?i)b.?/]|[word=/(?i)a/]|[word=/(?i)c/]|[word=see])

  - name: victimA_a_c_type_keep_false
    priority: ${ rulepriority }
    example: "a c"
    label: CriticalVictim
    type: token
    keep: false
    pattern: |
      (?<= [word=a]|[word=the])  [lemma=/(?i)\bc\b/] (?! [word=victim]| [word=/(?i)\bb.?\b/]|[word=/(?i)\ba\b/]|[word=/(?i)\bc\b/]|[word=see])


  - name: victim_type_extraction
    priority: ${ rulepriority }
    label: Type
    type: token
    keep: false
    pattern: |
      [lemma=type] [lemma=of]? [lemma=victim]? | [lemma=victim]? [lemma=type]

  - name: victim_type_extraction_kind
    priority: ${ rulepriority }
    label: Type
    type: token
    keep: false
    pattern: |
      [lemma=kind] [lemma=of] [lemma=victim]?

  - name: victim_critical_only
    priority: ${ rulepriority }
    example: "critical"
    label: CriticalVictim
    type: token
    keep: true
    pattern: |
      [lemma=critical & tag=JJ] (?! [mention=CriticalVictim] )
