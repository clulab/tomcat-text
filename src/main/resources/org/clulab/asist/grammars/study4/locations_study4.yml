vars: org/clulab/asist/grammars/vars.yml

rules:
  ### map quadrants ###
  - import: org/clulab/asist/grammars/study4/study4quadrants.yml
  ###

  - name: area_with_argument_flag
    priority: ${ first_priority }
    label: Zone
    example: "area next to my flag"
    type: token
    keep: true
    pattern: |
      (@agent:Entity?) (?<trigger>  [lemma=/^(area|zone|region)/]) []? []? (@flag:Flag)


  - name: area_with_argument_beacon
    priority: ${ first_priority }
    label: Zone
    example: "area next to my flag"
    type: token
    keep: true
    pattern: |
      (@agent:Entity?) (?<trigger>  [lemma=/^(area|zone|region)/]) []? []? (@beacon:Beacon)


  - name: area_with_owner
    priority: ${ first_priority }
    label: Zone
    example: "my area |blue's area"
    type: token
    keep: true
    pattern: |
      (@agent:Entity) [tag=POS]? (?<trigger>  [lemma=/^(area|zone|region)/])

  - name: area_no_argument
    priority: ${ first_priority }
    label: Zone
    type: token
    keep: false
    pattern: |
      [lemma=/^(area|region|zone)$/]

  - name: zone_with_direction
    priority: ${ first_priority }
    label: Zone
    example: "northern zone"
    type: token
    keep: true
    pattern: |
       (@direction:Direction) (?<trigger>  [lemma=/^(area|zone|corner|region)$/])

  - name: deseert
    priority: ${ first_priority }
    label: Desert
    type: token
    keep: false
    pattern: |
      [lemma=/^(desert)$/]

  - name: forest
    priority: ${ first_priority }
    label: Forest
    type: token
    keep: false
    pattern: |
      [lemma=/^(forest)$/]

  - name: swamp
    priority: ${ first_priority }
    label: Swamp
    type: token
    keep: false
    pattern: |
      [lemma=/^(swamp)$/]

  - name: village
    priority: ${ first_priority }
    label: Village
    type: token
    keep: false
    pattern: |
      [lemma=/^(village)$/]

  - name: church
    priority: ${ first_priority }
    label: Church
    type: token
    keep: false
    pattern: |
      [lemma=/^(church)$/]

  - name: region_generic
    priority: ${ first_priority }
    label: RegionGeneric
    type: token
    keep: false
    pattern: |
      [lemma=/^(church)$/]

  - name: tree
    priority: ${ first_priority }
    label: Tree
    type: token
    keep: false
    pattern: |
      [lemma=/^(tree)$/]

  - name: bottom_map
    priority: ${ first_priority }
    label: BottomSection
    example: "bottom of the map"
    type: token
    keep: true
    pattern: |
       (?<trigger>  [lemma=/^(bottom|lower)/]) []{1,3} (@map:Map)

  - name: top_map
    priority: ${ first_priority }
    label: TopSection
    example: "top of the map"
    type: token
    keep: true
    pattern: |
      (?<trigger>  [lemma=/^(top|upper)/]) []{1,3} (@map:Map)

  - name: left_map
    priority: ${ first_priority }
    label: LeftSection
    example: "left of the map"
    type: token
    keep: true
    pattern: |
      (?<trigger>  [lemma=/^(left)/]) []{1,3} (@map:Map)

  - name: right_map
    priority: ${ first_priority }
    label: RightSection
    example: "right of the map"
    type: token
    keep: true
    pattern: |
      (?<trigger>  [lemma=/^(right)/]) []{1,3} (@map:Map)

  - name: center_map
    priority: ${ first_priority }
    label: MiddleSection
    example: "right of the map"
    type: token
    keep: true
    pattern: |
      (?<trigger>  [lemma=/^(middle|center)/]) []{1,3} (@map:Map)

  - name: "coordinate_AND_location"
    label: CoordinatedLocation
    priority: ${ third_priority }
    example: "There's bombs in A2 and A3"
    pattern: |
      trigger = [word=and & tag=CC & !mention=CoordinatedLocation]
      location1: Location = <cc
      location2: Location = <cc >conj_and


  - name: comma_sep_loc
    priority: ${ second_priority }
    label: CoordinatedLocation
    example: "There's bombs in c2,d4,A2 and A3"
    type: token
    keep: true
    pattern: |
      (@location:Location) ("," @location:Location)+ (and @location:Location)?

  - name: prep_sep_loc
    priority: ${ second_priority }
    label: CoordinatedLocation
    example: "There's bombs in A2 and in A3"
    type: token
    keep: true
    pattern: |
      (@location:Location) (and []? @location:Location)