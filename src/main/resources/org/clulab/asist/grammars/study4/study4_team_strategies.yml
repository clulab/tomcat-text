vars: org/clulab/asist/grammars/vars.yml

rules:

  - name: stick_together
    label: StickTogether
    example: "I have 5 coins"
    priority: ${ rulepriority }
    pattern: |
      trigger = [lemma=/^stick$|^stay$|^keep$/] [word=/^close|^together$/]
      agent: Entity? = >/${agents}/

  - name: spread_out
    label: SpreadOut
    example: "I have 5 coins"
    priority: ${ rulepriority }
    pattern: |
      trigger = [lemma=/^spread|^stay$|^keep$/] [word=/^out|^apart$/]
      agent: Entity? = >/${agents}/

  - name: split_up
    label: SpreadOut
    example: "I have 5 coins"
    priority: ${ rulepriority }
    pattern: |
      trigger = [lemma=/^split$/] [word=/^up|^apart$/]
      agent: Entity? = >/${agents}/

  - name: stick_to_location
    label: StickToLocation
    example: "We could stick to the left side of the map"
    priority: ${ rulepriority }
    pattern: |
      trigger = [lemma=/^stick$/] to?
      agent: Entity? = >/${agents}/
      target: Location = >/${objects}/ | >nmod_to

  - name: stick_to_location_stay
    label: StickToLocation
    example: "We could stay in this area"
    priority: ${ rulepriority }
    pattern: |
      trigger = [lemma=/^(stay|remain)/] in?
      agent: Entity? = >/${agents}/
      target: Location = >/${objects}/ | >nmod_in

  - name: stick_to_strat
    label: StickToStrategy
    example: "We could stick to the left side of the map"
    priority: ${ rulepriority }
    pattern: |
      trigger = [lemma=/^stick$/]
      agent: Entity? = >/${agents}/
      target: Action = >/${objects}/ | >nmod_to | >advcl_to

  - name: stick_to_strat_continue
    label: StickToStrategy
    example: "We could continue buying X"
    priority: ${ rulepriority }
    pattern: |
      trigger = [lemma=/^continue/]
      agent: Entity? = >/${agents}/
      target: Action = >/${objects}/ | >xcomp | >advcl_to