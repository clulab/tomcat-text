vars: org/clulab/asist/grammars/vars.yml

rules:

  - name: defuse1
    priority: ${ rulepriority }
    label: Defuse
    pattern: |
      trigger = [lemma=/(?i)^d[ei]ff?use?|^clear$/ & tag=/^V/]
      agent: Entity? = >/${agents}/
      target: Bomb = >dobj

  - name: defuse2
    priority: ${ rulepriority }
    label: Defuse
    pattern: |
      trigger = [lemma=/(?i)^get$/ & tag=/^V/] [lemma=rid] [lemma=/of/]
      agent: Entity? = >/${agents}/
      target: Bomb = >dobj | >nmod_of

  - name: defuse3
    priority: ${ rulepriority }
    label: Defuse
    pattern: |
      trigger = [lemma=/(?i)^remove/ & tag=/^V/]
      agent: Entity? = >/${agents}/
      target: Bomb = >dobj

  - name: shop1
    priority: ${ rulepriority }
    label: Shop
    pattern: |
      trigger = (?<! [lemma=/^afford$/] [word=to]?  ) [lemma=/^buy$|^shop$|^purchase$|^buying$/]
      agent: Entity? = >/${agents}/
      target: Product = >dobj
      for: Entity? = >nmod_for


  - name: shop_get
    example: "Let's get a scanner"
    priority: ${ rulepriority }
    label: Shop
    pattern: |
      trigger = (?<! [lemma=/^afford$/] [word=to]?  ) [word=get]
      agent: Entity? = >/${agents}/
      target: Product = >dobj
      for: Entity? = >nmod_for

  - name: shop_getting
    example: "Let's start by getting a scanner"
    priority: ${ rulepriority }
    label: Shop
    pattern: |
      trigger = (?<! [lemma=/^afford$/] [word=to]?  ) [word=getting]
      agent: Entity? = >/${agents}/
      target: Product = >dobj
      for: Entity? = >nmod_for

  - name: shop_afford_item
    example: "I can afford a scanner"
    priority: ${ rulepriority }
    label: Afford
    pattern: |
      trigger = [lemma=/^afford$/]
      agent: Entity? = >/${agents}/
      target: Product? = >dobj

  - name: shop_afford_buy
    priority: ${ rulepriority }
    label: Afford
    pattern: |
      trigger = [lemma=/^afford$/] [word=to]? [lemma=/^buy$|^shop$|^purchase$/ | word=get]
      agent: Entity? = >/${agents}/
      for: Entity? = >nmod_for
      target: Product? = >dobj


  - name: shop_rebuy
    priority: ${ rulepriority }
    label: ReBuy
    pattern: |
      trigger = (?<! [lemma=/^afford$/] [word=to]?  ) [lemma=/^rebuy$|^restock$|^repurchase$/]
      agent: Entity? = >/${agents}/
      target: Product? = >dobj
      for: Entity? = >nmod_for

  - name: give_coins
    priority: ${ rulepriority }
    label: Transfer
    pattern: |
      trigger = [lemma=/^give$|^transfer|^donate$/] [word=to]?
      agent: Entity? = >/${agents}/
      beneficiary: Color? = >iobj
      target: Coin = >dobj

  - name: give_Product
    priority: ${ rulepriority }
    label: Transfer
    pattern: |
      trigger = [lemma=/^give$|^transfer|^donate$/] [word=to]?
      agent: Entity? = >/${agents}/
      beneficiary: Color? = >iobj
      target: Product = >dobj

  - name: use_tool
    priority: ${ rulepriority }
    label: UseTool
    pattern: |
      trigger = [lemma=/^use$|^utilize/]
      agent: Entity? = >/${agents}/
      tool: Product = >dobj [!mention=Coin]
      for: Action? = >advcl_to | >advcl_for |  >advcl_on

  - name: use_generic
    priority: ${ rulepriority }
    label: Use
    pattern: |
      trigger = [lemma=/^use$|^utilize/]
      agent: Entity? = >/${agents}/
      target: Item = >dobj [!mention=Product]
      for: Action = >advcl_to| >advcl_for

  - name: communicate_no_object
    priority: ${ rulepriority }
    comment: "Add one that has an object later"
    label: Communicate
    keep: false
    pattern: |
      trigger = [lemma=/^talk$|^discuss$|^communicate$/]
      agent: Entity? = >/${agents}/
      topic: Action? = >dobj


  - name: move_to_store_phase
    priority: ${ rulepriority }
    label: MoveToStore
    pattern: |
      trigger = [lemma=/(?i)^(move|go|transition)$/] [word=/^(to|into)$/]
      target: Store = >/nmod_(to|into)/ | >advmod
      agent: Entity? = >/${agents}/

  - name: enter_store
    priority: ${ rulepriority }
    label: MoveToStore
    pattern: |
      trigger = [lemma=/enter/ & tag=/^V/]
      target: Store = >dobj
      agent: Entity? = >/${agents}/

  - name: move_to_field_phase
    priority: ${ rulepriority }
    label: MoveToField
    pattern: |
      trigger = [lemma=/(?i)^(move|go|transition)$/] [word=/^(to|into)$/]
      target: Field = >/nmod_(to|into)/ | >advmod
      agent: Entity? = >/${agents}/

  - name: enter_field
    priority: ${ rulepriority }
    label: MoveToField
    pattern: |
      trigger = [lemma=/enter/ & tag=/^V/]
      target: Field = >dobj
      agent: Entity? = >/${agents}/

  - name: move_to_planning_phase
    priority: ${ rulepriority }
    label: MoveToPlan
    pattern: |
      trigger = [lemma=/(?i)^(move|go|transition)$/] [word=/^(to|into)$/]
      target: PlanningPhase = >/nmod_(to|into)/ | >advmod
      agent: Entity? = >/${agents}/

  - name: enter_plan
    priority: ${ rulepriority }
    label: MoveToPlan
    pattern: |
      trigger = [lemma=/enter/ & tag=/^V/]
      target: PlanningPhase = >dobj
      agent: Entity? = >/${agents}/