vars: org/clulab/asist/grammars/vars.yml

rules:

  - name: defuse1
    priority: ${ rulepriority }
    label: Defuse
    pattern: |
      trigger = [lemma=/(?i)^d[ei]ff?use?|^clear$/ & tag=/^V/]
      agent: Entity? = >/${agents}/
      target: Bomb = >dobj

  - name: defuse1_defusing
    priority: ${ rulepriority }
    example: "I'll be in charge of defusing bombs"
    label: Defuse
    type: token
    keep: true
    pattern: |
      (?<trigger>  [word=defusing & tag=VBG] ) (@bomb:Bomb)

  - name: defuse2
    priority: ${ rulepriority }
    label: Defuse
    pattern: |
      trigger = [lemma=/(?i)^get$|^take$/ & tag=/^V/] [lemma=/^(rid|care)$/] [lemma=/of/]
      agent: Entity? = >/${agents}/
      target: Bomb = >dobj | >nmod_of

  - name: defuse3
    priority: ${ rulepriority }
    label: Defuse
    pattern: |
      trigger = [lemma=/(?i)^remove/ & tag=/^V/]
      agent: Entity? = >/${agents}/
      target: Bomb = >dobj

  - name: defuse_get
    priority: ${ rulepriority }
    example: "let's get the bombs"
    label: Defuse
    pattern: |
      trigger = [lemma=/(?i)get|do$/ & tag=/^V/]
      agent: Entity? = >/${agents}/
      target: Bomb = >dobj

  - name: shop1
    priority: ${ rulepriority }
    label: Shop
    pattern: |
      trigger = (?<! [lemma=/^afford$/] [word=to]?  ) [lemma=/^buy$|^shop$|^purchase$|^buying$|^grab$/]
      agent: Entity? = >/${agents}/
      target: Product = >dobj
      for: Entity? = >nmod_for


  - name: shop_get
    example: "Let's get a scanner"
    priority: ${ rulepriority }
    label: Shop
    pattern: |
      trigger = (?<! [lemma=/^afford$/] [word=to]?  ) [word=get]
      agent: Entity? = >/${agents}/
      target: Product = >dobj | >/nmod_/
      for: Entity? = >nmod_for

  - name: shop_getting
    example: "Let's start by getting a scanner"
    priority: ${ rulepriority }
    label: Shop
    pattern: |
      trigger = (?<! [lemma=/^afford$/] [word=to]?  ) [word=getting]
      agent: Entity? = >/${agents}/
      target: Product = >dobj
      for: Entity? = >nmod_for

  - name: shop_afford_item
    example: "I can afford a scanner"
    priority: ${ rulepriority }
    label: Afford
    pattern: |
      trigger = [lemma=/^afford$/]
      agent: Entity? = >/${agents}/
      target: Product? = >dobj

  - name: shop_afford_buy
    priority: ${ rulepriority }
    label: Afford
    pattern: |
      trigger = [lemma=/^afford$/] [word=to]? [lemma=/^buy$|^shop$|^purchase$/ | word=get]
      agent: Entity? = >/${agents}/
      for: Entity? = >nmod_for
      target: Product? = >dobj


  - name: shop_rebuy
    priority: ${ rulepriority }
    label: ReBuy
    pattern: |
      trigger = (?<! [lemma=/^afford$/] [word=to]?  ) [lemma=/^rebuy$|^restock$|^repurchase$/]
      agent: Entity? = >/${agents}/
      target: Product? = >dobj
      for: Entity? = >nmod_for


  - name: shop_buy_number
    example: "Let's buy more"
    priority: ${ genericpriority }
    label: Shop
    pattern: |
      trigger = (?<! [mention=Shop]) [lemma=/^buy$|^shop$|^purchase$|^buying$|^get$/] (?! [mention=Shop])
      agent: Entity? = >/${agents}/
      target: Number = >dobj

  - name: give_coins
    priority: ${ rulepriority }
    label: Transfer
    pattern: |
      trigger = [lemma=/^give$|^transfer|^donate$/] [word=to]?
      agent: Entity? = >/${agents}/
      beneficiary: Color? = >iobj
      target: Coin = >dobj

  - name: give_Product
    priority: ${ rulepriority }
    label: Transfer
    pattern: |
      trigger = [lemma=/^give$|^transfer|^donate$/] [word=to]?
      agent: Entity? = >/${agents}/
      beneficiary: Color? = >iobj
      target: Product = >dobj

  - name: use_tool
    priority: ${ rulepriority }
    label: UseTool
    pattern: |
      trigger = [lemma=/^use$|^utilize/]
      agent: Entity? = >/${agents}/
      tool: Product = >dobj [!mention=Coin]
      for: Action? = >advcl_to | >advcl_for |  >advcl_on

  - name: use_generic
    priority: ${ rulepriority }
    label: Use
    pattern: |
      trigger = [lemma=/^use$|^utilize/]
      agent: Entity? = >/${agents}/
      target: Item = >dobj [!mention=Product]
      for: Action = >advcl_to| >advcl_for

  - name: communicate_no_object
    priority: ${ rulepriority }
    comment: "Add one that has an object later"
    label: Communicate
    keep: false
    pattern: |
      trigger = [lemma=/^talk$|^discuss$|^communicate$/]
      agent: Entity? = >/${agents}/
      topic: Action? = >dobj


  - name: move_to_store_phase
    priority: ${ rulepriority }
    label: MoveToStore
    pattern: |
      trigger = [lemma=/(?i)^(move|go|transition)$/] [word=/^(to|into)$/]
      target: Store = >/nmod_(to|into)/ | >advmod
      agent: Entity? = >/${agents}/

  - name: enter_store
    priority: ${ rulepriority }
    label: MoveToStore
    pattern: |
      trigger = [lemma=/enter/ & tag=/^V/]
      target: Store = >dobj
      agent: Entity? = >/${agents}/

  - name: move_to_field_phase
    priority: ${ rulepriority }
    label: MoveToField
    pattern: |
      trigger = [lemma=/(?i)^(move|go|transition)$/] [word=/^(to|into)$/]
      target: Field = >/nmod_(to|into)/ | >advmod
      agent: Entity? = >/${agents}/

  - name: enter_field
    priority: ${ rulepriority }
    label: MoveToField
    pattern: |
      trigger = [lemma=/enter/ & tag=/^V/]
      target: Field = >dobj
      agent: Entity? = >/${agents}/

  - name: move_to_planning_phase
    priority: ${ rulepriority }
    label: MoveToPlan
    pattern: |
      trigger = [lemma=/(?i)^(move|go|transition)$/] [word=/^(to|into)$/]
      target: PlanningPhase = >/nmod_(to|into)/ | >advmod
      agent: Entity? = >/${agents}/

  - name: enter_plan
    priority: ${ rulepriority }
    label: MoveToPlan
    pattern: |
      trigger = [lemma=/enter/ & tag=/^V/]
      target: PlanningPhase = >dobj
      agent: Entity? = >/${agents}/

  - name: clear
    priority: ${ rulepriority }
    example: "I've cleared the village"
    label: Clear
    pattern: |
      trigger = [lemma=/(?i)^(clear|finish)$/]
      target: Location = >dobj
      agent: Entity? = >/${agents}/

  - name: clear_dir
    priority: ${ rulepriority }
    example: "I've cleared the village"
    label: Clear
    pattern: |
      trigger = [lemma=/(?i)^(clear|finish)$/]
      target: Direction = >dobj
      agent: Entity? = >/${agents}/

  - name: clear_take_care
    priority: ${ rulepriority }
    example: "I'm taking care of the village"
    label: Clear
    pattern: |
      trigger = [word=/(?i)(take|taking)$/] [word=/(?i)care$/]
      agent: Entity? = >nsubj
      location: Location = >/${objects}/ >/advmod/|
               >/${objects}/ >/${preps}/|
               >dobj >nmod_of?

  - name: clear_take_care_dir
    priority: ${ rulepriority }
    example: "I'm taking care of the village"
    label: Clear
    pattern: |
      trigger = [word=/(?i)(take|taking)$/] [word=/(?i)care$/]
      agent: Entity? = >nsubj
      location: Direction = >/${objects}/ >/advmod/|
               >/${objects}/ >/${preps}/|
               >dobj >nmod_of?


  - name: remove
    priority: ${ rulepriority }
    example: "Let's remove our flags from the desert"
    label: Remove
    pattern: |
      trigger = [lemma=/(?i)^(remove)$/]
      target: Item = >dobj
      agent: Entity? = >/${agents}/
      location: Location? = >/nmod_(in|from)/

  - name: do
    priority: ${ rulepriority }
    example: "I'm doing the forest"
    label: Clear
    pattern: |
      trigger = [word=/(?i)(do|doing)$/]
      agent: Entity? = >nsubj
      location: Location = >/${objects}/ >/advmod/|
               >/${objects}/ >/${preps}/|
               >dobj >nmod_of?

  - name: do_dir
    priority: ${ rulepriority }
    example: "I'm doing the North"
    label: Clear
    pattern: |
      trigger = [word=/(?i)(do|doing)$/]
      agent: Entity? = >nsubj
      location: Direction = >/${objects}/ >/advmod/|
               >/${objects}/ >/${preps}/|
               >dobj >nmod_of?

  - name: clear_take_loc
    priority: ${ rulepriority }
    example: "I'm taking care of the village"
    label: Clear
    pattern: |
      trigger = [word=/(?i)(take|taking)$/]
      agent: Entity? = >nsubj
      location: Location = >/${objects}/ >/${preps}/|
               >dobj


  - name: clear_take_dir
    priority: ${ rulepriority }
    example: "I'm taking care of the village"
    label: Clear
    pattern: |
      trigger = [word=/(?i)(take|taking)$/]
      agent: Entity? = >nsubj
      location: Direction = >/${objects}/ >/${preps}/|
               >dobj


  - name: placeFlag
    label: PlaceFlag
    example: "I'm placing a marker for critical victim in front of D2."
    priority: ${ rulepriority }
    keep: true
    pattern: |
      trigger = [lemma=/^${ place_triggers }/]
      target: Flag = >dobj
      location: Location? = >dobj >/${ positional_preps }/
      flag_meaning: Concept? = >dobj >/nmod_for/

  - name: placeFlag_leave
    label: PlaceFlag
    example: "I'm leaving a marker in front of D2."
    priority: ${ rulepriority }
    keep: true
    pattern: |
      trigger = [lemma=/leave/]
      target: Flag = >dobj
      location: Location? = >dobj >/${ positional_preps }/
      flag_meaning: Concept? = >dobj >/nmod_for/

  - name: placeFlag_throw
    label: PlaceFlag
    example: "I can throw down a marker here."
    priority: ${ rulepriority }
    keep: true
    pattern: |
      trigger = [lemma=/throw/]
      target: Flag = >dobj
      location: Location? = >dobj >/${ positional_preps }/
      flag_meaning: Concept? = >dobj >/nmod_for/

  - name: extinguish
    priority: ${ rulepriority }
    label: Extinguish
    pattern: |
      trigger = [lemma=/(?i)^(extinguish|clear|remove)$/ & tag=/^V/]
      agent: Entity? = >/${agents}/
      target: Fire = >dobj

  - name: extinguish_take_care
    priority: ${ rulepriority }
    label: Extinguish
    pattern: |
      trigger = [lemma=/(?i)^(take)$/ & tag=/^V/]
      agent: Entity? = >/${agents}/
      target: Fire = >dobj >/nmod/

  - name: scout
    label: Search
    example: "We could scout the map"
    priority: ${ rulepriority }
    pattern: |
      trigger = [lemma=/^scout$|^explore$|^recon$/]
      agent: Entity? = >/${agents}/
      target: Location? = >/${objects}/ | >nmod_in
      map: Map? = >/${objects}/


  - name: markBomb
    priority: ${ rulepriority }
    example: "I'm marking bombs. Bombs I've marked are in a5"
    label: Mark
    pattern: |
      trigger = [lemma=/(?i)^mark/ & tag=/^V/]
      agent: Entity? = >/${agents}/
      target: Bomb = >dobj
      location: Location? = >/${objects}/ >/nmod/

  - name: markobstacle
    priority: ${ rulepriority }
    label: Mark
    pattern: |
      trigger = [lemma=/(?i)^mark/ & tag=/^V/]
      agent: Entity? = >/${agents}/
      target: Obstacle = >dobj
      location: Location? = >/${objects}/ >/nmod/

  - name: markLocation
    priority: ${ rulepriority }
    label: Mark
    pattern: |
      trigger = [lemma=/(?i)^mark/ & tag=/^V/]
      agent: Entity? = >/${agents}/
      location: Location = >/${objects}/
      target: Obstacle = >/${objects}/ >/nmod/
      target: Bomb = >/${objects}/ >/nmod/

  - name: mark_pattern_bomb
    priority: ${ genericpriority }
    label: Mark
    type: token
    keep: true
    pattern: |
      (@agent:Entity)? []? (?<trigger>  [lemma=/(?i)^mark/] [!mention=Mark]) (@location:Location)? []? (@target:Bomb)
      []? (@location:Location)?

  - name: mark_pattern_fire
    priority: ${ genericpriority }
    label: Mark
    type: token
    keep: true
    pattern: |
      (@agent:Entity)? []? (?<trigger>  [lemma=/(?i)^mark/] [!mention=Mark]) (@location:Location)? []? (@target:Fire)
      []? (@location:Location)?

  - name: bomb_explode
    example: "A bomb exploded"
    priority: ${ rulepriority }
    label: Explode
    pattern: |
      trigger = [lemma=/^(explode)$/]
      bomb: Bomb = >/${agents}/
      location: Location? = >/nmod_(in|from)/

  - name: bomb_explode_go_off
    example: "This bomb will go off!"
    priority: ${ rulepriority }
    label: Explode
    pattern: |
      trigger = [lemma=/^(go)$/] [lemma=off]
      bomb: Bomb = >/${agents}/
      location: Location? = >/nmod_(in|from)/